<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>唯理想与代码不可辜负</title>
  <subtitle>Welcome to Chao Wu&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.itwuchao.com/"/>
  <updated>2017-08-25T05:45:02.550Z</updated>
  <id>http://www.itwuchao.com/</id>
  
  <author>
    <name>Chao Wu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用函数节流优化频繁触发的事件函数</title>
    <link href="http://www.itwuchao.com/%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E4%BC%98%E5%8C%96%E9%A2%91%E7%B9%81%E8%A7%A6%E5%8F%91%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%87%BD%E6%95%B0.html"/>
    <id>http://www.itwuchao.com/使用函数节流优化频繁触发的事件函数.html</id>
    <published>2017-08-25T02:39:51.000Z</published>
    <updated>2017-08-25T05:45:02.550Z</updated>
    
    <content type="html"><![CDATA[<h5 id="之前做大数据展示的项目时，遇到过一个问题。我们有一个供用户选择日期的日历，根据所点击的日期来向服务端发送请求，用echats-js绘制这一天的数据。这个数据可能很大，绘制需要秒级的时间，如果用户非常频繁的点击不同日期（例如我一秒内从1日点到了10日），这就发送了10次请求，echarts-js去绘制时，就可能导致浏览器崩溃。"><a href="#之前做大数据展示的项目时，遇到过一个问题。我们有一个供用户选择日期的日历，根据所点击的日期来向服务端发送请求，用echats-js绘制这一天的数据。这个数据可能很大，绘制需要秒级的时间，如果用户非常频繁的点击不同日期（例如我一秒内从1日点到了10日），这就发送了10次请求，echarts-js去绘制时，就可能导致浏览器崩溃。" class="headerlink" title="之前做大数据展示的项目时，遇到过一个问题。我们有一个供用户选择日期的日历，根据所点击的日期来向服务端发送请求，用echats.js绘制这一天的数据。这个数据可能很大，绘制需要秒级的时间，如果用户非常频繁的点击不同日期（例如我一秒内从1日点到了10日），这就发送了10次请求，echarts.js去绘制时，就可能导致浏览器崩溃。"></a>之前做大数据展示的项目时，遇到过一个问题。我们有一个供用户选择日期的日历，根据所点击的日期来向服务端发送请求，用echats.js绘制这一天的数据。这个数据可能很大，绘制需要秒级的时间，如果用户非常频繁的点击不同日期（例如我一秒内从1日点到了10日），这就发送了10次请求，echarts.js去绘制时，就可能导致浏览器崩溃。</h5><h5 id="开始时我采用abort-方法，去阻断接收上一次的请求返回，确保接收到的数据是最后一次点击时所发送的。然后我发现abort-是阻止了接收的数据，我发出了10次，接收了1次，可是服务器处理了10次，浏览器是不崩溃了，可是总的耗时并没明显的改观。"><a href="#开始时我采用abort-方法，去阻断接收上一次的请求返回，确保接收到的数据是最后一次点击时所发送的。然后我发现abort-是阻止了接收的数据，我发出了10次，接收了1次，可是服务器处理了10次，浏览器是不崩溃了，可是总的耗时并没明显的改观。" class="headerlink" title="开始时我采用abort()方法，去阻断接收上一次的请求返回，确保接收到的数据是最后一次点击时所发送的。然后我发现abort()是阻止了接收的数据，我发出了10次，接收了1次，可是服务器处理了10次，浏览器是不崩溃了，可是总的耗时并没明显的改观。"></a>开始时我采用abort()方法，去阻断接收上一次的请求返回，确保接收到的数据是最后一次点击时所发送的。然后我发现abort()是阻止了接收的数据，我发出了10次，接收了1次，可是服务器处理了10次，浏览器是不崩溃了，可是总的耗时并没明显的改观。</h5><h5 id="类似的情况还有很多场景，诸如：window的resize-事件，scroll-事件等，这些都可能会在你执行改变窗口与滚动事件时，非常频繁的触发并执行了你的函数，从而影响了性能。"><a href="#类似的情况还有很多场景，诸如：window的resize-事件，scroll-事件等，这些都可能会在你执行改变窗口与滚动事件时，非常频繁的触发并执行了你的函数，从而影响了性能。" class="headerlink" title="类似的情况还有很多场景，诸如：window的resize()事件，scroll()事件等，这些都可能会在你执行改变窗口与滚动事件时，非常频繁的触发并执行了你的函数，从而影响了性能。"></a>类似的情况还有很多场景，诸如：window的resize()事件，scroll()事件等，这些都可能会在你执行改变窗口与滚动事件时，非常频繁的触发并执行了你的函数，从而影响了性能。</h5><p>我们可以采用函数(事件)节流的方式来解决这个问题。<br><a id="more"></a></p>
<p>首先允许我引用下红宝书上的专业严谨的定义：<br><div class="note danger"><pre><code>函数节流背后的基本思想是指，某些代码不可以在没有间断的情况连续重复执行。第一次调用函数，
</code></pre><p>创建一个定时器，在指定的时间间隔之后运行代码。当第二次调用该函数时，它会清除前一次的定时器并设置另一个。如果前一个定时器已经执行过了，这个操作就没有任何意义。然而，如果前一个定时器尚未执行，其实就是将其替换为一个新的定时器。目的是只有在执行函数的请求停止了一段时间之后才执行。</p>
</div></p>
<p>用咱的大白话来说一下这个原理的流程：</p>
<h5 id="当我要执行一个函数-fn-时，我约定它一段时间（比如200毫秒）后才执行-显而易见我可以把这个函数-fn-放到setTimeout里"><a href="#当我要执行一个函数-fn-时，我约定它一段时间（比如200毫秒）后才执行-显而易见我可以把这个函数-fn-放到setTimeout里" class="headerlink" title="当我要执行一个函数(fn)时，我约定它一段时间（比如200毫秒）后才执行,显而易见我可以把这个函数(fn)放到setTimeout里"></a>当我要执行一个函数(fn)时，我约定它一段时间（比如200毫秒）后才执行,显而易见我可以把这个函数(fn)放到setTimeout里</h5><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> time = setTimeout(fn,<span class="number">200</span>);</div></pre></td></tr></table></figure>
</code></pre><h5 id="当我再次要执行fn这个函数时，刚才那个setTimeout中的fn有没有执行呢？显然，我这两次操作，如果在200毫秒以内，那个fn就还没有被执行，这就造成了队列中有两个fn等待执行，那多浪费啊，清除掉上一个。"><a href="#当我再次要执行fn这个函数时，刚才那个setTimeout中的fn有没有执行呢？显然，我这两次操作，如果在200毫秒以内，那个fn就还没有被执行，这就造成了队列中有两个fn等待执行，那多浪费啊，清除掉上一个。" class="headerlink" title="当我再次要执行fn这个函数时，刚才那个setTimeout中的fn有没有执行呢？显然，我这两次操作，如果在200毫秒以内，那个fn就还没有被执行，这就造成了队列中有两个fn等待执行，那多浪费啊，清除掉上一个。"></a>当我再次要执行fn这个函数时，刚才那个setTimeout中的fn有没有执行呢？显然，我这两次操作，如果在200毫秒以内，那个fn就还没有被执行，这就造成了队列中有两个fn等待执行，那多浪费啊，清除掉上一个。</h5><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">clearTimeout(time);</div><div class="line">time = setTimeout(fn,<span class="number">200</span>);</div></pre></td></tr></table></figure>
</code></pre><h5 id="这样一来，我们每次触发事件要执行fn函数时，如果两次触发的事件在200毫秒以内，我们就只添加一个fn函数到执行队列中。你就可以脑补一下了：噼里啪啦一秒钟十几下的手速，最后只执行最后一次的fn，完美。"><a href="#这样一来，我们每次触发事件要执行fn函数时，如果两次触发的事件在200毫秒以内，我们就只添加一个fn函数到执行队列中。你就可以脑补一下了：噼里啪啦一秒钟十几下的手速，最后只执行最后一次的fn，完美。" class="headerlink" title="这样一来，我们每次触发事件要执行fn函数时，如果两次触发的事件在200毫秒以内，我们就只添加一个fn函数到执行队列中。你就可以脑补一下了：噼里啪啦一秒钟十几下的手速，最后只执行最后一次的fn，完美。"></a>这样一来，我们每次触发事件要执行fn函数时，如果两次触发的事件在200毫秒以内，我们就只添加一个fn函数到执行队列中。你就可以脑补一下了：噼里啪啦一秒钟十几下的手速，最后只执行最后一次的fn，完美。</h5><h5 id="明白了函数节流的原理，我们就可以封装下这个方法，方便我们用这种方式在不同的作用域执行不同的函数了。"><a href="#明白了函数节流的原理，我们就可以封装下这个方法，方便我们用这种方式在不同的作用域执行不同的函数了。" class="headerlink" title="明白了函数节流的原理，我们就可以封装下这个方法，方便我们用这种方式在不同的作用域执行不同的函数了。"></a>明白了函数节流的原理，我们就可以封装下这个方法，方便我们用这种方式在不同的作用域执行不同的函数了。</h5><h5 id="我们定义一个throttle函数，我们需要一个传入要执行的函数的参数、一个要延迟的时间、还有可能用到的作用域参数。var-变量的方式容易污染，我们采用函数属性的方式来控制我们的setTimeout。"><a href="#我们定义一个throttle函数，我们需要一个传入要执行的函数的参数、一个要延迟的时间、还有可能用到的作用域参数。var-变量的方式容易污染，我们采用函数属性的方式来控制我们的setTimeout。" class="headerlink" title="我们定义一个throttle函数，我们需要一个传入要执行的函数的参数、一个要延迟的时间、还有可能用到的作用域参数。var 变量的方式容易污染，我们采用函数属性的方式来控制我们的setTimeout。"></a>我们定义一个throttle函数，我们需要一个传入要执行的函数的参数、一个要延迟的时间、还有可能用到的作用域参数。var 变量的方式容易污染，我们采用函数属性的方式来控制我们的setTimeout。</h5><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn,time,scope</span>) </span>&#123;</div><div class="line">    clearTimeout(fn.tid);</div><div class="line">    fn.tid = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        fn.call(scope);</div><div class="line">    &#125;,time);</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
</code></pre><h5 id="这样它就可以大展身手了。例如："><a href="#这样它就可以大展身手了。例如：" class="headerlink" title="这样它就可以大展身手了。例如："></a>这样它就可以大展身手了。例如：</h5><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">writeLove</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'I love javascript'</span>);</div><div class="line">&#125;</div><div class="line"><span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    throttle(writeLove,<span class="number">100</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><h5 id="你可以打开浏览器控制台，然后飞快的不停缩放窗口，看一下输出的效果哦。"><a href="#你可以打开浏览器控制台，然后飞快的不停缩放窗口，看一下输出的效果哦。" class="headerlink" title="你可以打开浏览器控制台，然后飞快的不停缩放窗口，看一下输出的效果哦。"></a>你可以打开浏览器控制台，然后飞快的不停缩放窗口，看一下输出的效果哦。</h5>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;之前做大数据展示的项目时，遇到过一个问题。我们有一个供用户选择日期的日历，根据所点击的日期来向服务端发送请求，用echats-js绘制这一天的数据。这个数据可能很大，绘制需要秒级的时间，如果用户非常频繁的点击不同日期（例如我一秒内从1日点到了10日），这就发送了10次请求，echarts-js去绘制时，就可能导致浏览器崩溃。&quot;&gt;&lt;a href=&quot;#之前做大数据展示的项目时，遇到过一个问题。我们有一个供用户选择日期的日历，根据所点击的日期来向服务端发送请求，用echats-js绘制这一天的数据。这个数据可能很大，绘制需要秒级的时间，如果用户非常频繁的点击不同日期（例如我一秒内从1日点到了10日），这就发送了10次请求，echarts-js去绘制时，就可能导致浏览器崩溃。&quot; class=&quot;headerlink&quot; title=&quot;之前做大数据展示的项目时，遇到过一个问题。我们有一个供用户选择日期的日历，根据所点击的日期来向服务端发送请求，用echats.js绘制这一天的数据。这个数据可能很大，绘制需要秒级的时间，如果用户非常频繁的点击不同日期（例如我一秒内从1日点到了10日），这就发送了10次请求，echarts.js去绘制时，就可能导致浏览器崩溃。&quot;&gt;&lt;/a&gt;之前做大数据展示的项目时，遇到过一个问题。我们有一个供用户选择日期的日历，根据所点击的日期来向服务端发送请求，用echats.js绘制这一天的数据。这个数据可能很大，绘制需要秒级的时间，如果用户非常频繁的点击不同日期（例如我一秒内从1日点到了10日），这就发送了10次请求，echarts.js去绘制时，就可能导致浏览器崩溃。&lt;/h5&gt;&lt;h5 id=&quot;开始时我采用abort-方法，去阻断接收上一次的请求返回，确保接收到的数据是最后一次点击时所发送的。然后我发现abort-是阻止了接收的数据，我发出了10次，接收了1次，可是服务器处理了10次，浏览器是不崩溃了，可是总的耗时并没明显的改观。&quot;&gt;&lt;a href=&quot;#开始时我采用abort-方法，去阻断接收上一次的请求返回，确保接收到的数据是最后一次点击时所发送的。然后我发现abort-是阻止了接收的数据，我发出了10次，接收了1次，可是服务器处理了10次，浏览器是不崩溃了，可是总的耗时并没明显的改观。&quot; class=&quot;headerlink&quot; title=&quot;开始时我采用abort()方法，去阻断接收上一次的请求返回，确保接收到的数据是最后一次点击时所发送的。然后我发现abort()是阻止了接收的数据，我发出了10次，接收了1次，可是服务器处理了10次，浏览器是不崩溃了，可是总的耗时并没明显的改观。&quot;&gt;&lt;/a&gt;开始时我采用abort()方法，去阻断接收上一次的请求返回，确保接收到的数据是最后一次点击时所发送的。然后我发现abort()是阻止了接收的数据，我发出了10次，接收了1次，可是服务器处理了10次，浏览器是不崩溃了，可是总的耗时并没明显的改观。&lt;/h5&gt;&lt;h5 id=&quot;类似的情况还有很多场景，诸如：window的resize-事件，scroll-事件等，这些都可能会在你执行改变窗口与滚动事件时，非常频繁的触发并执行了你的函数，从而影响了性能。&quot;&gt;&lt;a href=&quot;#类似的情况还有很多场景，诸如：window的resize-事件，scroll-事件等，这些都可能会在你执行改变窗口与滚动事件时，非常频繁的触发并执行了你的函数，从而影响了性能。&quot; class=&quot;headerlink&quot; title=&quot;类似的情况还有很多场景，诸如：window的resize()事件，scroll()事件等，这些都可能会在你执行改变窗口与滚动事件时，非常频繁的触发并执行了你的函数，从而影响了性能。&quot;&gt;&lt;/a&gt;类似的情况还有很多场景，诸如：window的resize()事件，scroll()事件等，这些都可能会在你执行改变窗口与滚动事件时，非常频繁的触发并执行了你的函数，从而影响了性能。&lt;/h5&gt;&lt;p&gt;我们可以采用函数(事件)节流的方式来解决这个问题。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.itwuchao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="web前端" scheme="http://www.itwuchao.com/tags/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="javascript" scheme="http://www.itwuchao.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>关于命名对象添加为document对象的明显属性</title>
    <link href="http://www.itwuchao.com/%E5%85%B3%E4%BA%8EJS%E5%B0%86%E5%91%BD%E5%90%8D%E5%AF%B9%E8%B1%A1%E6%B7%BB%E5%8A%A0%E4%B8%BAdocument%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%98%8E%E6%98%BE%E5%B1%9E%E6%80%A7.html"/>
    <id>http://www.itwuchao.com/关于JS将命名对象添加为document对象的明显属性.html</id>
    <published>2017-08-18T03:18:00.000Z</published>
    <updated>2017-08-18T05:47:18.029Z</updated>
    
    <content type="html"><![CDATA[<p>在读红宝书DOM扩展一章时，机缘巧合地注释掉了一行代码。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//var div1 = document.getElementById('div1');</span></div><div class="line"><span class="built_in">console</span>.log(div1.innerHTML);</div></pre></td></tr></table></figure>
<p>结果，打印效果为：123<br><a id="more"></a><br>Excuse me？amazing！这真是无法描述我的心情。难道是语法糖？<br>于是我将id换成了class<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(div1.innerHTML);</div></pre></td></tr></table></figure>
<p>结果…你猜？<br>很合理：Uncaught ReferenceError: div1 is not defined<br>翻了书中关于DOM对象的几章，没有收获。<br>给我的小伙伴们描述了下，也都表示没见过。不过我们都一致认为：与浏览器有关。我是在chrome运行的。结果，IE7都可以，火狐最新版也可以。<br>给在国外的前辈去了封邮件。前辈回复“haha”，并给了我一个社区链接。<br>我用’蹩脚’的谷歌翻译下得票最高的回答：<br><div class="note primary"><p>应该发生的是将“命名元素”添加为document对象的明显属性。这是一个非常糟糕的主意，因为它允许元素名称与实际属性冲突document。</p>
<p>IE也通过添加命名元素作为window对象的属性使情况更糟。这是双重的缺点，因为现在您必须避免document在window您（或项目中的任何其他库代码）可能要使用的对象的任何成员之后命名元素。</p>
<p>这也意味着这些元素可视为全局变量。幸运的是，在这种情况下，您的代码中的任何真实的全局var或function声明都会影响它们，因此您不必担心在这里命名太多，但如果您尝试使用冲突名称对全局变量进行分配，并且您忘记声明它var会在IE中收到一个错误，因为它会尝试将值分配给元素本身。</p>
<p>通常被认为是不好的做法，省略var，也可以依靠命名的元素在window全局或全局信息上可见。坚持document.getElementById，这是更广泛的支持，更不模糊。如果您不喜欢打字，您可以编写一个名称较小的简单包装功能。无论哪种方式，使用id-to-element查找缓存都没有意义，因为浏览器通常会优化getElementById调用以使用快速查找; 所有你得到的是元素更改id或从文档中添加/删除时的问题。</p>
<p>欧朋复制IE，然后WebKit的加入进来，现在都穿上命名元素的以前不标准，实践document特性，并把他们的先前IE-只有实践window都被 标准化的HTML5，其方法是将文件和规范每浏览器作者对我们造成可怕的做法，让他们永远成为网页的一部分。所以Firefox 4也会支持这一点。</p>
<p>什么是“命名元素”？任何与id任何东西有关name，用于“识别”的目的：即表单，图像，锚点和其他一些，但不是其他不相关的name属性实例，如表单输入字段中的控制名称，参数名称<param>或元数据类型<meta>。“确定” name应该是应该避免的id。</p>
</div></p>
<p>附上原文：<br><div class="note default"><p>What is supposed to happen is that ‘named elements’ are added as apparent properties of the document object. This is a really bad idea, as it allows element names to clash with real properties of document.</p>
<p>IE made the situation worse by also adding named elements as properties of the window object. This is doubly bad in that now you have to avoid naming your elements after any member of either the document or the window object you (or any other library code in your project) might want to use.</p>
<p>It also means that these elements are visible as global-like variables. Luckily in this case any real global var or function declarations in your code shadow them, so you don’t need to worry so much about naming here, but if you try to do an assignment to a global variable with a clashing name and you forget to declare it var, you’ll get an error in IE as it tries to assign the value to the element itself.</p>
<p>It’s generally considered bad practice to omit var, as well as to rely on named elements being visible on window or as globals. Stick to document.getElementById, which is more widely-supported and less ambiguous. You can write a trivial wrapper function with a shorter name if you don’t like the typing. Either way, there’s no point in using an id-to-element lookup cache, because browsers typically optimise the getElementById call to use a quick lookup anyway; all you get is problems when elements change id or are added/removed from the document.</p>
<p>Opera copied IE, then WebKit joined in, and now both the previously-unstandardised practice of putting named elements on document properties, and the previously-IE-only practice of putting them on window are being standardised by HTML5, whose approach is to document and standardise every terrible practice inflicted on us by browser authors, making them part of the web forever. So Firefox 4 will also support this.</p>
<p>What are ‘named elements’? Anything with an id, and anything with a name being used for ‘identifying’ purposes: that is, forms, images, anchors and a few others, but not other unrelated instances of a name attribute, like control-names in form input fields, parameter names in <param> or metadata type in <meta>. ‘Identifying’ names are the ones that should should be avoided in favour of id.</p>
</div></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在读红宝书DOM扩展一章时，机缘巧合地注释掉了一行代码。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;div1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;123&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//var div1 = document.getElementById(&#39;div1&#39;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(div1.innerHTML);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果，打印效果为：123&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.itwuchao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="web前端" scheme="http://www.itwuchao.com/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Say Hello</title>
    <link href="http://www.itwuchao.com/say-hello.html"/>
    <id>http://www.itwuchao.com/say-hello.html</id>
    <published>2017-08-18T02:41:20.295Z</published>
    <updated>2017-07-27T01:40:52.144Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Say-Hello"><a href="#Say-Hello" class="headerlink" title="Say Hello"></a>Say Hello</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">怀着一颗热忱的心，对关注、支持本站的你，说一声：“你好，我叫武超，请多指教。”</div></pre></td></tr></table></figure>
<p>Say Hello，是一种态度，是我们从陌生到朋友的开始。<br><a id="more"></a></p>
<h4 id="做时光里自己的见证者"><a href="#做时光里自己的见证者" class="headerlink" title="做时光里自己的见证者"></a>做时光里自己的见证者</h4><p>这是我开始写博客的初心。<br>世界变化很快，技术环境、生活环境都在更新、迭代、诞生、淘汰。来不及驻留欣赏，想通过这里，把自己的历程记录下来，一来与大家交流，分享与学习，二来供自己查阅，发现不足从而成长。</p>
<p>我会把博文分好类，有我自己的技术心得和理解，知识的整理与归纳。有我兴致来时写一些生活散文，诗词歌赋。</p>
<p>如果你觉得我有点意思，可以看看我的简介：<a href="/about">关于</a>。</p>
<p>That’s all , Thank you!</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Say-Hello&quot;&gt;&lt;a href=&quot;#Say-Hello&quot; class=&quot;headerlink&quot; title=&quot;Say Hello&quot;&gt;&lt;/a&gt;Say Hello&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;怀着一颗热忱的心，对关注、支持本站的你，说一声：“你好，我叫武超，请多指教。”&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Say Hello，是一种态度，是我们从陌生到朋友的开始。&lt;br&gt;
    
    </summary>
    
      <category term="闲叙" scheme="http://www.itwuchao.com/categories/%E9%97%B2%E5%8F%99/"/>
    
    
      <category term="首篇" scheme="http://www.itwuchao.com/tags/%E9%A6%96%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>小结web页面IE8兼容性的解决方法</title>
    <link href="http://www.itwuchao.com/%E5%B0%8F%E7%BB%93web%E9%A1%B5%E9%9D%A2IE8%E5%85%BC%E5%AE%B9%E6%80%A7%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html"/>
    <id>http://www.itwuchao.com/小结web页面IE8兼容性的解决方法.html</id>
    <published>2017-07-27T01:31:10.000Z</published>
    <updated>2017-07-27T06:28:29.105Z</updated>
    
    <content type="html"><![CDATA[<p>在项目中遇到的IE8兼容性的问题，Google、百度的一些解决方法，亲测有效。如果你有补充、问题、更多解决方式等，请在文章下方留言。</p>
<p><font color="#fc6423">（φ(&gt;ω&lt;*) 友情提示：本文为了代码的可观性，采用了代码块的方式，不因设备大小而折行。如果你使用的是移动设备浏览，黑色的代码块部分需要手动滑动横向滚动条查看，辛苦哟~）</font><br><a id="more"></a></p>
<h3 id="Q1：你的本地有很高的IE版本，打开网页却是默认IE6等低版本渲染？"><a href="#Q1：你的本地有很高的IE版本，打开网页却是默认IE6等低版本渲染？" class="headerlink" title="Q1：你的本地有很高的IE版本，打开网页却是默认IE6等低版本渲染？"></a>Q1：你的本地有很高的IE版本，打开网页却是默认IE6等低版本渲染？</h3>   <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,Chrome=1"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h4 id="A1：在-lt-head-gt-中使用以上代码。IE-edge告诉IE使用最新的引擎渲染网页，chrome-1则可以激活Chrome-Frame。"><a href="#A1：在-lt-head-gt-中使用以上代码。IE-edge告诉IE使用最新的引擎渲染网页，chrome-1则可以激活Chrome-Frame。" class="headerlink" title="A1：在&lt;head&gt;中使用以上代码。IE=edge告诉IE使用最新的引擎渲染网页，chrome=1则可以激活Chrome Frame。"></a>A1：在&lt;head&gt;中使用以上代码。IE=edge告诉IE使用最新的引擎渲染网页，chrome=1则可以激活Chrome Frame。</h4><h3 id="Q2：如果你使用Bootstrap，发现IE8下有问题？"><a href="#Q2：如果你使用Bootstrap，发现IE8下有问题？" class="headerlink" title="Q2：如果你使用Bootstrap，发现IE8下有问题？"></a>Q2：如果你使用Bootstrap，发现IE8下有问题？</h3><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></div><div class="line"><span class="comment">    &lt;script src="js/respond.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">    &lt;script src="js/html5shiv.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">&lt;![endif]--&gt;</span></div></pre></td></tr></table></figure>
</code></pre><h4 id="A2：在-lt-head-gt-中使用hack方式。respond-js解决IE8的响应式布局与媒体查询特性的支持-html5shiv-js解决IE8对HTML5标签的支持"><a href="#A2：在-lt-head-gt-中使用hack方式。respond-js解决IE8的响应式布局与媒体查询特性的支持-html5shiv-js解决IE8对HTML5标签的支持" class="headerlink" title="A2：在&lt;head&gt;中使用hack方式。respond.js解决IE8的响应式布局与媒体查询特性的支持;html5shiv.js解决IE8对HTML5标签的支持."></a>A2：在&lt;head&gt;中使用hack方式。respond.js解决IE8的响应式布局与媒体查询特性的支持;html5shiv.js解决IE8对HTML5标签的支持.</h4><h3 id="Q3：你使用的Jquery版本较高，IE8环境下报错？"><a href="#Q3：你使用的Jquery版本较高，IE8环境下报错？" class="headerlink" title="Q3：你使用的Jquery版本较高，IE8环境下报错？"></a>Q3：你使用的Jquery版本较高，IE8环境下报错？</h3><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></div><div class="line"><span class="comment">    &lt;script src="js/jquery.1.8.3.min.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">&lt;![endif]--&gt;</span></div></pre></td></tr></table></figure>
</code></pre><h4 id="A3：在-lt-head-gt-中使用hack方式。IE8下使用2-0以下Jquery版本。"><a href="#A3：在-lt-head-gt-中使用hack方式。IE8下使用2-0以下Jquery版本。" class="headerlink" title="A3：在&lt;head&gt;中使用hack方式。IE8下使用2.0以下Jquery版本。"></a>A3：在&lt;head&gt;中使用hack方式。IE8下使用2.0以下Jquery版本。</h4><h3 id="Q4：IE10及以下对表单placeholder属性的支持不友好？"><a href="#Q4：IE10及以下对表单placeholder属性的支持不友好？" class="headerlink" title="Q4：IE10及以下对表单placeholder属性的支持不友好？"></a>Q4：IE10及以下对表单placeholder属性的支持不友好？</h3><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--[if lt IE 11]&gt;</span></div><div class="line"><span class="comment">    &lt;script src="js/placeholder.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">&lt;![endif]--&gt;</span></div></pre></td></tr></table></figure>
</code></pre><h4 id="A4：在-lt-head-gt-中使用hack方式。如果你觉得太重，可以自己写一段JS，实现类似的效果。"><a href="#A4：在-lt-head-gt-中使用hack方式。如果你觉得太重，可以自己写一段JS，实现类似的效果。" class="headerlink" title="A4：在&lt;head&gt;中使用hack方式。如果你觉得太重，可以自己写一段JS，实现类似的效果。"></a>A4：在&lt;head&gt;中使用hack方式。如果你觉得太重，可以自己写一段JS，实现类似的效果。</h4><h3 id="Q5：你需要使指定元素在IE8下使用另外的样式与JS？"><a href="#Q5：你需要使指定元素在IE8下使用另外的样式与JS？" class="headerlink" title="Q5：你需要使指定元素在IE8下使用另外的样式与JS？"></a>Q5：你需要使指定元素在IE8下使用另外的样式与JS？</h3><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></div><div class="line"><span class="comment">    &lt;html class="ie8"&gt;</span></div><div class="line"><span class="comment">    &lt;script type="text/javascript"&gt;</span></div><div class="line"><span class="comment">        //....</span></div><div class="line"><span class="comment">    &lt;/script&gt;</span></div><div class="line"><span class="comment">&lt;![endif]--&gt;</span></div></pre></td></tr></table></figure>
</code></pre><h4 id="A5-在-lt-head-gt-中使用hack方式。在样式表中，你可以类似这样写："><a href="#A5-在-lt-head-gt-中使用hack方式。在样式表中，你可以类似这样写：" class="headerlink" title="A5: 在&lt;head&gt;中使用hack方式。在样式表中，你可以类似这样写："></a>A5: 在&lt;head&gt;中使用hack方式。在样式表中，你可以类似这样写：</h4><pre><code><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.ie8</span> <span class="selector-class">.wuchao</span>&#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#32ccfe</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><h3 id="Q6：你需要在IE8下做一个圆形头像？图像为用户上传，无法使用切图的方式？别方。"><a href="#Q6：你需要在IE8下做一个圆形头像？图像为用户上传，无法使用切图的方式？别方。" class="headerlink" title="Q6：你需要在IE8下做一个圆形头像？图像为用户上传，无法使用切图的方式？别方。"></a>Q6：你需要在IE8下做一个圆形头像？图像为用户上传，无法使用切图的方式？别方。</h3><pre><code><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.ie8</span> <span class="selector-class">.wuchao</span>&#123;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">z-index</span>: <span class="number">2</span>;</div><div class="line">    <span class="attribute">behavior</span>:<span class="built_in">url</span>(PIE.htc);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><h4 id="A6：可以使用PIE-htc。网上搜索一下这个文件，down到你的项目根目录下。behavior使用绝对路径即可。该元素需要有一个position与z-index，值不要求，z-index大一点就好。"><a href="#A6：可以使用PIE-htc。网上搜索一下这个文件，down到你的项目根目录下。behavior使用绝对路径即可。该元素需要有一个position与z-index，值不要求，z-index大一点就好。" class="headerlink" title="A6：可以使用PIE.htc。网上搜索一下这个文件，down到你的项目根目录下。behavior使用绝对路径即可。该元素需要有一个position与z-index，值不要求，z-index大一点就好。"></a>A6：可以使用PIE.htc。网上搜索一下这个文件，down到你的项目根目录下。behavior使用绝对路径即可。该元素需要有一个position与z-index，值不要求，z-index大一点就好。</h4><h3 id="Q7：与透明度相关的兼容使你有些苦恼？"><a href="#Q7：与透明度相关的兼容使你有些苦恼？" class="headerlink" title="Q7：与透明度相关的兼容使你有些苦恼？"></a>Q7：与透明度相关的兼容使你有些苦恼？</h3><pre><code><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.wuchao</span>&#123;</div><div class="line">    <span class="attribute">opacity</span>:<span class="number">0.8</span>;</div><div class="line">    <span class="attribute">filter</span>: progid:DXImageTransform.Microsoft.<span class="built_in">Alpha</span>(opacity=80);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><h4 id="A7：使用opacity做透明度，可以用以上兼容。"><a href="#A7：使用opacity做透明度，可以用以上兼容。" class="headerlink" title="A7：使用opacity做透明度，可以用以上兼容。"></a>A7：使用opacity做透明度，可以用以上兼容。</h4><pre><code>    rgba颜色的解决方式有很多，这里说两种。
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.wuchao</span>&#123;</div><div class="line">    <span class="attribute">-pie-background</span>: <span class="built_in">rgba</span>(0,0,0,0.4);</div><div class="line">    <span class="attribute">behavior</span>:<span class="built_in">url</span>(PIE.htc);</div><div class="line">    <span class="attribute">z-index</span>: <span class="number">2</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="comment">/*有点傻瓜式，但是好用。缺点：对background-color:rgba()这种好像是无效的。*/</span></div><div class="line">&#125;</div><div class="line"><span class="selector-class">.wuchao2</span>&#123;</div><div class="line">    <span class="attribute">filter</span>:progid:DXImageTransform.Microsoft.<span class="built_in">Gradient</span>(enabled=bEnabled,startColorStr=#7f000000,endColorStr=#7f000000);</div><div class="line">    <span class="comment">/*使用滤镜渐变的写法，将开始颜色与结束颜色一致，实现了一个不渐变的纯透明度颜色。后六位是颜色值，将rgba值转化而来。#前两位代表了设定的透明度。</span></div><div class="line"><span class="comment">    0.1——19；0.2——33；0.3——4C；0.4——66；0.5——7F；0.6——99；0.7——B2；0.8——C8；0.9——E5；1——FF；*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><h3 id="Q8-圆角可以搞定，那么阴影呢？"><a href="#Q8-圆角可以搞定，那么阴影呢？" class="headerlink" title="Q8: 圆角可以搞定，那么阴影呢？"></a>Q8: 圆角可以搞定，那么阴影呢？</h3><pre><code><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.wuchao</span>&#123;</div><div class="line">    <span class="attribute">-moz-box-shadow</span>:<span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="number">#666</span>;</div><div class="line">    <span class="attribute">-webkit-box-shadow</span>:<span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="number">#666</span>;</div><div class="line">    <span class="attribute">box-shadow</span>:<span class="number">1px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="number">#666</span>;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">behavior</span>:<span class="built_in">url</span>(pie.htc);</div><div class="line">    <span class="attribute">z-index</span>: <span class="number">2</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><h4 id="A8-是的，我已经不好意思去写了。"><a href="#A8-是的，我已经不好意思去写了。" class="headerlink" title="A8: 是的，我已经不好意思去写了。"></a>A8: 是的，我已经不好意思去写了。</h4><h3 id="Q9-IE8说：background-size，你奈我何？"><a href="#Q9-IE8说：background-size，你奈我何？" class="headerlink" title="Q9: IE8说：background-size，你奈我何？"></a>Q9: IE8说：background-size，你奈我何？</h3><pre><code><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.wuchao</span>&#123;</div><div class="line">    <span class="attribute">filter</span>:progid:DXImageTransform.Microsoft.<span class="built_in">AlphaImageLoader</span>(src=<span class="string">'images/mylesson/diploma.png'</span>,sizingMethod=<span class="string">'scale'</span>);</div><div class="line">    <span class="attribute">-ms-filter</span>:<span class="string">"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='images/mylesson/diploma.png',sizingMethod='scale')"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><h4 id="A9：这里的src也为绝对路径。这么容易？No。如果你使用了background-image，你会发现出现了两张错乱背景图。那么"><a href="#A9：这里的src也为绝对路径。这么容易？No。如果你使用了background-image，你会发现出现了两张错乱背景图。那么" class="headerlink" title="A9：这里的src也为绝对路径。这么容易？No。如果你使用了background-image，你会发现出现了两张错乱背景图。那么"></a>A9：这里的src也为绝对路径。这么容易？No。如果你使用了background-image，你会发现出现了两张错乱背景图。那么</h4><pre><code><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.ie8</span> <span class="selector-class">.wuchao</span>&#123;</div><div class="line">    background-image：none！important;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><h3 id="Q10：如果你写原生JS，又用到了className的DOM查询，IE8又闹小情绪了。"><a href="#Q10：如果你写原生JS，又用到了className的DOM查询，IE8又闹小情绪了。" class="headerlink" title="Q10：如果你写原生JS，又用到了className的DOM查询，IE8又闹小情绪了。"></a>Q10：如果你写原生JS，又用到了className的DOM查询，IE8又闹小情绪了。</h3><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(!<span class="built_in">document</span>.getElementsByClassName)&#123;</div><div class="line">   <span class="built_in">document</span>.getElementsByClassName = <span class="function"><span class="keyword">function</span>(<span class="params">className, element</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> children = (element || <span class="built_in">document</span>).getElementsByTagName(<span class="string">'*'</span>);</div><div class="line">        <span class="keyword">var</span> elements = <span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;children.length; i++)&#123;</div><div class="line">            <span class="keyword">var</span> child = children[i];</div><div class="line">            <span class="keyword">var</span> classNames = child.className.split(<span class="string">' '</span>);</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;classNames.length; j++)&#123;</div><div class="line">                 <span class="keyword">if</span> (classNames[j] == className)&#123;</div><div class="line">                     elements.push(child);</div><div class="line">                     <span class="keyword">break</span>;</div><div class="line">                 &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> elements;</div><div class="line">   &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><h4 id="A10：为不开心的IE8宝宝定制一个getElementsByClassName的方法。记得放到你的DOM查询前面。"><a href="#A10：为不开心的IE8宝宝定制一个getElementsByClassName的方法。记得放到你的DOM查询前面。" class="headerlink" title="A10：为不开心的IE8宝宝定制一个getElementsByClassName的方法。记得放到你的DOM查询前面。"></a>A10：为不开心的IE8宝宝定制一个getElementsByClassName的方法。记得放到你的DOM查询前面。</h4><h3 id="Q11：你需要自己开发canvas效果，IE8觉得太辛苦想罢工？"><a href="#Q11：你需要自己开发canvas效果，IE8觉得太辛苦想罢工？" class="headerlink" title="Q11：你需要自己开发canvas效果，IE8觉得太辛苦想罢工？"></a>Q11：你需要自己开发canvas效果，IE8觉得太辛苦想罢工？</h3><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></div><div class="line"><span class="comment">&lt;script src="js/excanvas.js"&gt;&lt;/script&gt;</span></div><div class="line"><span class="comment">&lt;![endif]--&gt;</span></div></pre></td></tr></table></figure>
</code></pre><h4 id="A11："><a href="#A11：" class="headerlink" title="A11："></a>A11：</h4><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//举例</span></div><div class="line"><span class="keyword">var</span> c = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"canvas"</span>)[<span class="number">0</span>];</div><div class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span>.G_vmlCanvasManager!=<span class="string">"undefined"</span>) &#123;</div><div class="line">   c = <span class="built_in">window</span>.G_vmlCanvasManager.initElement(c);</div><div class="line">&#125;</div><div class="line"><span class="comment">//如果你用到innerText，需要做它的兼容。例如获取a的innerText</span></div><div class="line"><span class="keyword">var</span> a = getElementById(<span class="string">'canval'</span>);</div><div class="line"><span class="keyword">var</span> aval = a.innerText || a.textContent;</div></pre></td></tr></table></figure>
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在项目中遇到的IE8兼容性的问题，Google、百度的一些解决方法，亲测有效。如果你有补充、问题、更多解决方式等，请在文章下方留言。&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#fc6423&quot;&gt;（φ(&amp;gt;ω&amp;lt;*) 友情提示：本文为了代码的可观性，采用了代码块的方式，不因设备大小而折行。如果你使用的是移动设备浏览，黑色的代码块部分需要手动滑动横向滚动条查看，辛苦哟~）&lt;/font&gt;&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.itwuchao.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="web前端" scheme="http://www.itwuchao.com/tags/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="兼容" scheme="http://www.itwuchao.com/tags/%E5%85%BC%E5%AE%B9/"/>
    
      <category term="IE8" scheme="http://www.itwuchao.com/tags/IE8/"/>
    
  </entry>
  
</feed>
